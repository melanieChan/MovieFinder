{"ast":null,"code":"var _jsxFileName = \"/Users/melanie/Downloads/Git/MoviesList/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction SearchBar() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      placeholder: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"searchBtn\",\n      children: \"Find Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n} // list of movies from search results\n\n\n_c2 = SearchBar;\n\nfunction MovieList() {\n  _s();\n\n  const [movies, setMovies] = useState(null);\n  const movieTitle = \"aladdin\"; // search movies\n\n  useEffect(() => {\n    fetch(`http://www.omdbapi.com/?s=${movieTitle}&apikey=52514a3a`).then(response => response.json()).then(setMovies).catch(console.error);\n  }, []); // display search results\n\n  if (movies && movies.Response === \"True\") {\n    // display a card for every movie in search results list\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieList\",\n      children: movies.Search.map(movie => {\n        return /*#__PURE__*/_jsxDEV(MovieCard, {\n          name: movie.Title,\n          releaseDate: movie.Year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieList\",\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n} // card showing details of a specific movie\n\n\n_s(MovieList, \"OBGH+5ouJdp+Pb/yVe58YXCOits=\");\n\n_c3 = MovieList;\n\nfunction MovieCard({\n  name,\n  releaseDate\n}) {\n  _s2();\n\n  const [movieData, setMovieData] = useState(null);\n  var runtime = \"Unknown duration\";\n  var genre = \"Unknown genre\";\n  var director = \"Unknown director\";\n  var wantDetails = false; // find details of movie\n\n  useEffect(() => {}, []);\n\n  async function getDetails() {\n    if (wantDetails) {\n      fetch(`http://www.omdbapi.com/?t=${name}&apikey=52514a3a`).then(response => response.json()).then(setMovieData).catch(console.error);\n    }\n  } // set movie data variables to results retrieved\n\n\n  if (movieData && movieData.Response === \"True\") {\n    runtime = `${movieData.Runtime}`;\n    genre = `${movieData.Genre}`;\n    if (movieData.Director !== null && movieData.Director !== \"N/A\") director = `${movieData.Director}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: 'transparent',\n        margin: \"20px\",\n        borderRadius: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: () => {\n          wantDetails = true;\n          console.log(\"clicked\");\n          getDetails();\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: \"cardGridContainer\",\n          direction: \"column\",\n          justify: \"center\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              paddingTop: \"25px\",\n              marginBottom: \"20px\"\n            },\n            className: \"movieTitle\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: \"cardDetailsContainer\",\n            direction: \"row\",\n            justify: \"center\",\n            spacing: 7,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: releaseDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: runtime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: director\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MovieCard, \"SjeSPeghCDdQMeIk8t2GMKAbI64=\");\n\n_c4 = MovieCard;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 134,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SearchBar\");\n$RefreshReg$(_c3, \"MovieList\");\n$RefreshReg$(_c4, \"MovieCard\");","map":{"version":3,"sources":["/Users/melanie/Downloads/Git/MoviesList/src/index.js"],"names":["React","ReactDOM","useState","useEffect","Grid","Card","CardActionArea","App","SearchBar","MovieList","movies","setMovies","movieTitle","fetch","then","response","json","catch","console","error","Response","Search","map","movie","Title","Year","MovieCard","name","releaseDate","movieData","setMovieData","runtime","genre","director","wantDetails","getDetails","Runtime","Genre","Director","backgroundColor","margin","borderRadius","log","paddingTop","marginBottom","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {useState} from \"react\";\nimport {useEffect} from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SearchBar />\n      <MovieList />\n    </div>\n  );\n}\n\nfunction SearchBar() {\n  return (\n    <div id=\"search\">\n      <h1>Movies</h1>\n      <input\n        id=\"searchBar\"\n        type=\"text\"\n        placeholder=\"Search Movies\"\n      />\n      <button className=\"searchBtn\">Find Movie</button>\n    </div>\n    );\n}\n\n// list of movies from search results\nfunction MovieList() {\n  const [movies, setMovies] = useState(null);\n\n    const movieTitle = \"aladdin\";\n\n    // search movies\n    useEffect(()=> {\n        fetch(`http://www.omdbapi.com/?s=${movieTitle}&apikey=52514a3a`)\n          .then(response => response.json())\n          .then(setMovies)\n          .catch(console.error);\n    }, []);\n\n    // display search results\n    if (movies && movies.Response === \"True\") {\n      // display a card for every movie in search results list\n      return (\n           <div className=\"movieList\">\n             {movies.Search.map(movie => {\n                return <MovieCard name={ movie.Title}\n                              releaseDate={movie.Year} />\n              })}\n           </div>\n         );\n    }\n\n  return (\n    <div className=\"movieList\">\n      <h2>No results</h2>\n    </div>\n  );\n}\n\n// card showing details of a specific movie\nfunction MovieCard({name, releaseDate}) {\n  const [movieData, setMovieData] = useState(null);\n\n  var runtime = \"Unknown duration\";\n  var genre = \"Unknown genre\";\n  var director = \"Unknown director\";\n  var wantDetails = false;\n\n  // find details of movie\n  useEffect(()=> {\n  }, []);\n  async function getDetails() {\n    if (wantDetails) {\n    fetch(`http://www.omdbapi.com/?t=${name}&apikey=52514a3a`)\n      .then(response => response.json())\n      .then(setMovieData)\n      .catch(console.error);\n    }\n  }\n\n  // set movie data variables to results retrieved\n  if (movieData && movieData.Response === \"True\") {\n    runtime = `${movieData.Runtime}`;\n    genre = `${movieData.Genre}`;\n    if (movieData.Director !== null && movieData.Director !== \"N/A\")\n      director = `${movieData.Director}`;\n  }\n\n  return (\n    <div >\n      <Card  style={{backgroundColor: 'transparent', margin: \"20px\", borderRadius: \"20px\"}}>\n        <CardActionArea onClick ={() => {\n          wantDetails = true;\n          console.log(\"clicked\");\n          getDetails();\n        }}>\n          <Grid container\n            className=\"cardGridContainer\"\n            direction = \"column\"\n            justify = \"center\"\n            spacing = {2} >\n\n          {/*movie title*/}\n            <Grid item style={{paddingTop: \"25px\", marginBottom: \"20px\"}} className=\"movieTitle\">{name}</Grid>\n\n          {/* horizontal row of movie details */}\n            <Grid container\n              className = \"cardDetailsContainer\"\n              direction='row'\n              justify = \"center\"\n              spacing = {7}>\n              <Grid item>{releaseDate}</Grid>\n              <Grid item>{runtime}</Grid>\n              <Grid item>{genre}</Grid>\n              <Grid item>{director}</Grid>\n            </Grid>\n\n          </Grid>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}