{"ast":null,"code":"import _regeneratorRuntime from\"/Users/melanie/Downloads/Git/MoviesList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/melanie/Downloads/Git/MoviesList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/melanie/Downloads/Git/MoviesList/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import ReactDOM from'react-dom';import'./index.css';import{useState,useEffect}from\"react\";import Grid from\"@material-ui/core/Grid\";import Card from\"@material-ui/core/Card\";import CardActionArea from\"@material-ui/core/CardActionArea\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsx(MovieSearch,{})});}function MovieSearch(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];// user search bar input\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchParameter=_useState4[0],setSearchParameter=_useState4[1];// search query formatted\n// called after user clicks search button to submit search query\nfunction search(e){e.preventDefault();// prevent page from refreshing\nsetSearchQuery(\"\");// clear search bar\nvar searchParam=encodeURIComponent(searchQuery);// format search query data\nsetSearchParameter(searchParam);}return/*#__PURE__*/_jsxs(\"div\",{id:\"search\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Movies\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:search,children:[/*#__PURE__*/_jsx(\"input\",{id:\"searchBar\",type:\"text\",placeholder:\"Search Movies\",value:searchQuery// store search query\n,onChange:function onChange(e){return setSearchQuery(e.target.value);}// set search bar value to display search query\n}),/*#__PURE__*/_jsx(\"button\",{className:\"searchBtn colorFadeEffect\",children:\"Find Movie\"})]}),/* display list of searched movies\n        [condition] ? [result if true] : [result if false]*/searchParameter?/*#__PURE__*/_jsx(MovieList,{movieTitle:searchParameter,searchState:searchParameter}):/*#__PURE__*/_jsx(_Fragment,{})]});}// list of movies from search results\nfunction MovieList(_ref){var movieTitle=_ref.movieTitle,searchState=_ref.searchState;var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),movies=_useState6[0],setMovies=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),currentPage=_useState8[0],setCurrentPage=_useState8[1];useEffect(function(){// reset current page count to 1 if a new movie is searched\nif(currentPage!==1)setCurrentPage(1);},[searchState]);// search movies\nuseEffect(function(){console.log(\"getting search data for \"+movieTitle+\" page \"+currentPage);fetch(\"http://www.omdbapi.com/?s=\".concat(movieTitle,\"&apikey=52514a3a&page=\").concat(currentPage)).then(function(response){return response.json();}).then(function(response){return setMovies(response);}).catch(console.error);},[searchState,currentPage]);// useEffect will run when search state or page changes due to user search input changes or page navigation\n// called when user clicks on button to go to different page\nfunction changePage(page){if(page!==currentPage)setCurrentPage(page);}return/*#__PURE__*/_jsxs(\"div\",{className:\"movieList\",children:[// display search results\nmovies&&movies.Response===\"True\"?/* display a card for every movie in search results list */movies.Search.map(function(movie){return/*#__PURE__*/_jsx(MovieCard,{name:movie.Title,year:movie.Year});}):/*#__PURE__*/ // if no results found\n_jsx(\"div\",{className:\"movieList\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"No results\"})}),/* display page navigation menu */[1,2,3].map(function(page){return/*#__PURE__*/_jsx(\"button\",{className:\"pageBtn colorFadeEffect\",onClick:function onClick(){changePage(page);},children:page});})]});}// card showing details of a specific movie\nfunction MovieCard(_ref2){var name=_ref2.name,year=_ref2.year;var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),movieData=_useState10[0],setMovieData=_useState10[1];var releaseDate=\"Unknown release date\";var runtime=\"Unknown runtime\";var genre=\"Unknown genre\";var director=\"Unknown director\";var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),detailsShown=_useState12[0],setDetailsShown=_useState12[1];// whether or not details are currently displayed\n// clear data of movie on same card from previos page / search\nuseEffect(function(){setDetailsShown(false);},[name,year]);// find details of movie\nfunction getDetails(){return _getDetails.apply(this,arguments);}// set movie data variables to results retrieved\nfunction _getDetails(){_getDetails=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// will only get data if data isn't already displayed\nif(!detailsShown){console.log(\"getting movie data\");fetch(\"http://www.omdbapi.com/?t=\".concat(name,\"&y=\").concat(year,\"&apikey=52514a3a\")).then(function(response){return response.json();}).then(setMovieData).catch(console.error);setDetailsShown(true);}case 1:case\"end\":return _context.stop();}}},_callee);}));return _getDetails.apply(this,arguments);}if(movieData&&movieData.Response===\"True\"){releaseDate=\"\".concat(movieData.Released);runtime=\"\".concat(movieData.Runtime);genre=\"\".concat(movieData.Genre);if(movieData.Director!==null&&movieData.Director!==\"N/A\")director=\"\".concat(movieData.Director);}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Card,{style:{backgroundColor:'transparent',margin:\"20px\",borderRadius:\"20px\"},children:/*#__PURE__*/_jsx(CardActionArea,{onClick:function onClick(){console.log(\"clicked on movie to see details\");console.log(\"detailsShown: \"+detailsShown);getDetails();},children:/*#__PURE__*/_jsxs(Grid,{container:true,className:\"cardGridContainer\",direction:\"column\",justify:\"center\",spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,style:{paddingTop:\"25px\",marginBottom:\"20px\"},className:\"movieTitle\",children:[name,\" \",year]}),/* horizontal row of movie details */detailsShown?/*#__PURE__*/_jsxs(Grid,{container:true,className:\"cardDetailsContainer\",direction:\"row\",justify:\"center\",spacing:7,children:[/*#__PURE__*/_jsx(Grid,{item:true,children:releaseDate}),/*#__PURE__*/_jsx(Grid,{item:true,children:runtime}),/*#__PURE__*/_jsx(Grid,{item:true,children:genre}),/*#__PURE__*/_jsx(Grid,{item:true,children:director})]}):/*#__PURE__*/_jsx(_Fragment,{})]})})})});}ReactDOM.render(/*#__PURE__*/_jsx(App,{}),document.getElementById('root'));","map":{"version":3,"sources":["/Users/melanie/Downloads/Git/MoviesList/src/index.js"],"names":["React","ReactDOM","useState","useEffect","Grid","Card","CardActionArea","App","MovieSearch","searchQuery","setSearchQuery","searchParameter","setSearchParameter","search","e","preventDefault","searchParam","encodeURIComponent","target","value","MovieList","movieTitle","searchState","movies","setMovies","currentPage","setCurrentPage","console","log","fetch","then","response","json","catch","error","changePage","page","Response","Search","map","movie","Title","Year","MovieCard","name","year","movieData","setMovieData","releaseDate","runtime","genre","director","detailsShown","setDetailsShown","getDetails","Released","Runtime","Genre","Director","backgroundColor","margin","borderRadius","paddingTop","marginBottom","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {useState, useEffect} from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <MovieSearch />\n    </div>\n  );\n}\n\nfunction MovieSearch() {\n  const [searchQuery, setSearchQuery] = useState(''); // user search bar input\n  const [searchParameter, setSearchParameter] = useState(''); // search query formatted\n\n  // called after user clicks search button to submit search query\n  function search(e) {\n    e.preventDefault();   // prevent page from refreshing\n    setSearchQuery(\"\"); // clear search bar\n\n    var searchParam = encodeURIComponent(searchQuery);  // format search query data\n    setSearchParameter(searchParam);\n  }\n\n  return (\n    <div id=\"search\">\n      <h1>Movies</h1>\n      <form onSubmit={search}>\n        <input\n          id=\"searchBar\"\n          type=\"text\"\n          placeholder=\"Search Movies\"\n          value = {searchQuery} // store search query\n          onChange = {e => setSearchQuery(e.target.value)}  // set search bar value to display search query\n        />\n        <button className=\"searchBtn colorFadeEffect\">Find Movie</button>\n      </form>\n\n      {/* display list of searched movies\n        [condition] ? [result if true] : [result if false]*/\n        searchParameter ? <MovieList movieTitle={searchParameter} searchState={searchParameter} /> : <></>\n      }\n\n    </div>\n    );\n}\n\n// list of movies from search results\nfunction MovieList({movieTitle, searchState}) {\n  const [movies, setMovies] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  useEffect(() => {\n    // reset current page count to 1 if a new movie is searched\n    if (currentPage !== 1)\n      setCurrentPage(1);\n  }, [searchState]);\n\n    // search movies\n    useEffect(()=> {\n      console.log(\"getting search data for \" + movieTitle + \" page \" + currentPage);\n\n        fetch(`http://www.omdbapi.com/?s=${movieTitle}&apikey=52514a3a&page=${currentPage}`)\n          .then(response => response.json())\n          .then(response => setMovies(response))\n          .catch(console.error);\n    }, [searchState, currentPage]); // useEffect will run when search state or page changes due to user search input changes or page navigation\n\n    // called when user clicks on button to go to different page\n    function changePage(page) {\n      if (page !== currentPage)\n        setCurrentPage(page);\n    }\n\n      return (\n           <div className=\"movieList\">\n           {   // display search results\n             movies && movies.Response === \"True\" ?\n\n              /* display a card for every movie in search results list */\n               movies.Search.map(movie => {\n                  return <MovieCard name={movie.Title} year={movie.Year}/>\n              })\n              :   // if no results found\n              <div className=\"movieList\">\n                  <h2>No results</h2>\n              </div>\n          }\n\n          { /* display page navigation menu */\n            [1,2,3].map((page) => (\n                <button className=\"pageBtn colorFadeEffect\" onClick={() => {changePage(page)} }>{page}</button>\n              ))\n          }\n\n           </div>\n         );\n}\n\n// card showing details of a specific movie\nfunction MovieCard({name, year}) {\n  const [movieData, setMovieData] = useState(null);\n\n  var releaseDate = \"Unknown release date\";\n  var runtime = \"Unknown runtime\";\n  var genre = \"Unknown genre\";\n  var director = \"Unknown director\";\n\n  const [detailsShown, setDetailsShown] = useState(false);  // whether or not details are currently displayed\n\n  // clear data of movie on same card from previos page / search\n  useEffect(() => {\n    setDetailsShown(false);\n  }, [name, year]);\n\n  // find details of movie\n  async function getDetails() {\n    // will only get data if data isn't already displayed\n    if (!detailsShown) {\n      console.log(\"getting movie data\");\n      fetch(`http://www.omdbapi.com/?t=${name}&y=${year}&apikey=52514a3a`)\n        .then(response => response.json())\n        .then(setMovieData)\n        .catch(console.error);\n      setDetailsShown(true);\n    }\n  }\n\n  // set movie data variables to results retrieved\n  if (movieData && movieData.Response === \"True\") {\n    releaseDate = `${movieData.Released}`;\n    runtime = `${movieData.Runtime}`;\n    genre = `${movieData.Genre}`;\n    if (movieData.Director !== null && movieData.Director !== \"N/A\")\n      director = `${movieData.Director}`;\n  }\n\n  return (\n    <div >\n      <Card  style={{backgroundColor: 'transparent', margin: \"20px\", borderRadius: \"20px\"}}>\n        <CardActionArea onClick ={() => {\n          console.log(\"clicked on movie to see details\");\n          console.log(\"detailsShown: \" + detailsShown);\n          getDetails();\n        }}>\n          <Grid container\n            className=\"cardGridContainer\"\n            direction = \"column\"\n            justify = \"center\"\n            spacing = {2} >\n\n          {/*movie title*/}\n            <Grid item style={{paddingTop: \"25px\", marginBottom: \"20px\"}} className=\"movieTitle\">{name} {year}</Grid>\n\n          {/* horizontal row of movie details */\n            detailsShown ?\n            <Grid container\n              className = \"cardDetailsContainer\"\n              direction='row'\n              justify = \"center\"\n              spacing = {7}>\n              <Grid item>{releaseDate}</Grid>\n              <Grid item>{runtime}</Grid>\n              <Grid item>{genre}</Grid>\n              <Grid item>{director}</Grid>\n            </Grid>\n            : <></>\n          }\n\n          </Grid>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}