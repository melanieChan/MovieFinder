{"ast":null,"code":"var _jsxFileName = \"/Users/melanie/Downloads/Git/MoviesList/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\n\nfunction SearchBar() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"searchBar\",\n      type: \"text\",\n      placeholder: \"Search Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"searchBtn\",\n      children: \"Find Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = SearchBar;\n\nfunction MovieList() {\n  _s();\n\n  const [movies, setMovies] = useState(null);\n  const movieTitle = \"moana\"; // console.log(`${movieTitle}`);\n  // async function getData() {\n  //   try {\n  //      const response = await fetch(`http://www.omdbapi.com/?s=${movieTitle}&apikey=52514a3a`);\n  //      const data = await response.json()\n  //      setMovies(data);\n  //   } catch (e) {\n  //        console.error(e.toString);\n  //   }\n\n  useEffect(() => {\n    // getData(); //fetch data from api\n    fetch(`http://www.omdbapi.com/?s=${movieTitle}&apikey=52514a3a`).then(res => res.json()).then(setMovies).catch(console.error);\n  }, []);\n\n  if (movies) {\n    //console.log(movies);\n    // return <div>{JSON.stringify(movies.Search)}</div>\n    // JSON.stringify(movies);\n    return (\n      /*#__PURE__*/\n      // for (var movieCount in movies.Search) {\n      // JSON.stringify(movie);\n      // console.log(movie.Title);\n      // <p>{ JSON.stringify(movies.Search[movieCount].Title)}</p>\n      _jsxDEV(\"div\", {\n        className: \"movieList\",\n        children: movies.Search.map(movie => {\n          return /*#__PURE__*/_jsxDEV(MovieCard, {\n            name: movie.Title,\n            releaseDate: movie.Year,\n            runtime: movie.Poster,\n            genre: \"family\",\n            director: \"director\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this)\n    );\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movieList\",\n    children: [/*#__PURE__*/_jsxDEV(MovieCard, {\n      name: \"Movie\",\n      releaseDate: \"6/2/21\",\n      runtime: \"1 hr\",\n      genre: \"family\",\n      director: \"director\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieCard, {\n      name: \"Movie\",\n      releaseDate: \"6/2/21\",\n      runtime: \"1 hr\",\n      genre: \"family\",\n      director: \"director\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MovieList, \"OBGH+5ouJdp+Pb/yVe58YXCOits=\");\n\n_c3 = MovieList;\n\nfunction MovieCard({\n  name,\n  releaseDate,\n  runtime,\n  genre,\n  director\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        backgroundColor: 'transparent',\n        margin: \"20px\",\n        borderRadius: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: \"cardGridContainer\",\n          direction: \"column\",\n          justify: \"center\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: {\n              paddingTop: \"25px\",\n              marginBottom: \"20px\"\n            },\n            className: \"movieTitle\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            direction: \"row\",\n            justify: \"center\",\n            spacing: 10,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: releaseDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: runtime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: director\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_c4 = MovieCard;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 120,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"SearchBar\");\n$RefreshReg$(_c3, \"MovieList\");\n$RefreshReg$(_c4, \"MovieCard\");","map":{"version":3,"sources":["/Users/melanie/Downloads/Git/MoviesList/src/index.js"],"names":["React","ReactDOM","useState","useEffect","Grid","Card","CardActionArea","App","SearchBar","MovieList","movies","setMovies","movieTitle","fetch","then","res","json","catch","console","error","Search","map","movie","Title","Year","Poster","MovieCard","name","releaseDate","runtime","genre","director","backgroundColor","margin","borderRadius","paddingTop","marginBottom","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {useState} from \"react\";\nimport {useEffect} from \"react\";\n\nimport Grid from \"@material-ui/core/Grid\"\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SearchBar />\n      <MovieList />\n    </div>\n  );\n}\n\nfunction SearchBar() {\n  return (\n    <div id=\"search\">\n      <h1>Movies</h1>\n      <input\n        id=\"searchBar\"\n        type=\"text\"\n        placeholder=\"Search Movies\"\n      />\n      <button className=\"searchBtn\">Find Movies</button>\n    </div>\n    );\n}\n\nfunction MovieList() {\n  const [movies, setMovies] = useState(null);\n\n    const movieTitle = \"moana\";\n    // console.log(`${movieTitle}`);\n\n    // async function getData() {\n    //   try {\n    //      const response = await fetch(`http://www.omdbapi.com/?s=${movieTitle}&apikey=52514a3a`);\n    //      const data = await response.json()\n    //      setMovies(data);\n    //   } catch (e) {\n    //        console.error(e.toString);\n    //   }\n\n    useEffect(()=> {\n        // getData(); //fetch data from api\n        fetch(`http://www.omdbapi.com/?s=${movieTitle}&apikey=52514a3a`)\n          .then(res => res.json())\n          .then(setMovies)\n          .catch(console.error);\n    }, []);\n\n\n        if (movies) {\n          //console.log(movies);\n           // return <div>{JSON.stringify(movies.Search)}</div>\n          // JSON.stringify(movies);\n          return (\n\n            // for (var movieCount in movies.Search) {\n              // JSON.stringify(movie);\n              // console.log(movie.Title);\n               // <p>{ JSON.stringify(movies.Search[movieCount].Title)}</p>\n               <div className=\"movieList\">\n                 {movies.Search.map(movie => {\n                    return <MovieCard name={ movie.Title}\n                                  releaseDate={movie.Year} runtime={movie.Poster} genre=\"family\" director=\"director\"/>\n                  })}\n               </div>\n             );\n        }\n\n\n\n  return (\n    <div className=\"movieList\">\n      <MovieCard name=\"Movie\"releaseDate=\"6/2/21\" runtime=\"1 hr\" genre=\"family\" director=\"director\"/>\n      <MovieCard name=\"Movie\" releaseDate=\"6/2/21\" runtime=\"1 hr\" genre=\"family\" director=\"director\"/>\n    </div>\n  );\n}\n\nfunction MovieCard({name, releaseDate, runtime, genre, director}) {\n  return (\n    <div >\n      <Card  style={{backgroundColor: 'transparent', margin: \"20px\", borderRadius: \"20px\"}}>\n        <CardActionArea >\n          <Grid container\n            className=\"cardGridContainer\"\n            direction = \"column\"\n            justify = \"center\"\n            spacing = {2} >\n\n          {/*movie title*/}\n            <Grid item style={{paddingTop: \"25px\", marginBottom: \"20px\"}} className=\"movieTitle\">{name}</Grid>\n\n          {/* horizontal row of movie details */}\n            <Grid container\n              direction='row'\n              justify = \"center\"\n              spacing = {10}>\n              <Grid item>{releaseDate}</Grid>\n              <Grid item>{runtime}</Grid>\n              <Grid item>{genre}</Grid>\n              <Grid item>{director}</Grid>\n            </Grid>\n\n          </Grid>\n        </CardActionArea>\n      </Card>\n    </div>\n  );\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}